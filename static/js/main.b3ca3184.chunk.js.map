{"version":3,"sources":["Store.js","components/Drink.js","components/ConfirmationPopover/Slider.js","components/ConfirmationPopover/SliderContainer.js","components/ConfirmationPopover/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","drinks","selected","reducer","state","action","type","Object","objectSpread","drink","console","log","concat","name","Error","capitalize","s","toUpperCase","slice","DrinkWrapper","styled","div","_templateObject","DrinkNameWrapper","span","_templateObject2","Drink","_ref","onClick","react_default","a","createElement","src","icon","alt","height","width","SliderWrapper","Slider_templateObject","props","startPos","currentPos","pos","calculatePosition","Slider","onTouchStart","onTouchMove","onTouchEnd","chevron_right_default","size","SliderOutlineWrapper","SliderContainer_templateObject","SliderContainer","onConfirm","_useState","useState","sliderStartPos","sliderCurrentPos","_useState2","slicedToArray","setState","ConfirmationPopover_Slider","ev","touches","clientX","slideIn","keyframes","ConfirmationPopover_templateObject","ModalWrapper","ConfirmationPopover_templateObject2","TitleBarWrapper","_templateObject3","CloseButtonWrapper","_templateObject4","ModalTextWrapper","_templateObject5","ConfirmationPopover","onHide","x_default","ConfirmationPopover_SliderContainer","callApi","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","status","message","abrupt","stop","apply","this","arguments","injectGlobal","App_templateObject","HeaderWrapper","App_templateObject2","DrinksWrapper","App_templateObject3","AppWrapper","App_templateObject4","App","_useReducer","useReducer","_useReducer2","dispatch","dialog","components_ConfirmationPopover","useEffect","then","_ref2","catch","err","error","length","map","components_Drink","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3ca3184.chunk.js","sourcesContent":["const initialState = {\n  drinks: [],\n  selected: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'api-response':\n      return { ...state, drinks: action.drinks };\n    case 'select':\n      return { ...state, selected: action.drink };\n    case 'close-dialog':\n      return { ...state, selected: null };\n    case 'order-drink':\n      // TODO: make this actually do something\n      console.log(`Ordered drink ${action.drink.name}`);\n      return { ...state, selected: null };\n    default:\n      throw new Error('Unexpected action');\n  }\n}\n\nexport { initialState, reducer };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Drink = ({ drink, onClick }) => (\n  <DrinkWrapper onClick={onClick}>\n    <img\n      src={`icon/${drink.icon}.svg`}\n      alt=\"drink icon\"\n      height={26}\n      width={26}\n    />\n    <DrinkNameWrapper>\n      {capitalize(drink.name)}\n    </DrinkNameWrapper>\n  </DrinkWrapper>\n);\n\nDrink.propTypes = {\n  drink: PropTypes.shape({\n    name: PropTypes.string,\n    icon: PropTypes.string\n  }),\n  onClick: PropTypes.func\n};\n\nconst capitalize = (s) => s && s[0].toUpperCase() + s.slice(1);\n\nconst DrinkWrapper = styled.div`\n  width: 90vw;\n  max-width: 400px;\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 10px;\n  margin: 15px 5px;\n  border-radius: 5px;\n  box-shadow: 0 5px 0 0 #555;\n`;\n\nconst DrinkNameWrapper = styled.span`\n  font-size: 1.5em;\n  margin-left: 20px;\n`;\n\nexport default Drink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ChevronRight from 'react-feather/dist/icons/chevron-right';\n\nconst Slider = ({ onTouchStart, onTouchMove, onTouchEnd, startPos, currentPos }) => (\n  <SliderWrapper\n    onTouchStart={onTouchStart}\n    onTouchMove={onTouchMove}\n    onTouchEnd={onTouchEnd}\n    startPos={startPos}\n    currentPos={currentPos}\n  >\n    <ChevronRight size={28}/>\n  </SliderWrapper>\n);\n\nSlider.propTypes = {\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  startPos: PropTypes.number,\n  currentPos: PropTypes.number\n};\n\nconst calculatePosition = (startPos, currentPos) => {\n  const pos = currentPos - startPos;\n\n  // clamp between 0 and 220px\n  if (pos <= 0)\n    return 0;\n  else if (pos >= 220)\n    return '220px';\n  else\n    return `${pos}px`;\n};\n\nconst SliderWrapper = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: ${props => calculatePosition(props.startPos, props.currentPos)}\n  transition: margin 80ms;\n`;\n\nexport default Slider;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Slider from './Slider';\n\nconst SliderContainer = ({ onConfirm }) => {\n  const [state, setState] = useState({\n    sliderStartPos: 0,\n    sliderCurrentPos: 0\n  });\n  const { sliderStartPos, sliderCurrentPos } = state;\n\n  const handleTouchStart = (ev) => {\n    console.log(ev)\n    setState({\n      sliderStartPos: ev.touches[0].clientX,\n      sliderCurrentPos: ev.touches[0].clientX\n    });\n  };\n\n  const handleTouchMove = (ev) => {\n    console.log(ev)\n    setState({\n      sliderCurrentPos: ev.touches[0].clientX\n    });\n  };\n\n  const handleTouchEnd = () =>\n    sliderCurrentPos - sliderStartPos >= 220\n      ? onConfirm()\n      : setState({\n        sliderStartPos: 0,\n        sliderCurrentPos: 0\n      });\n\n  return (\n    <SliderOutlineWrapper>\n      <Slider\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        startPos={sliderStartPos}\n        currentPos={sliderCurrentPos}\n      />\n    </SliderOutlineWrapper>\n  )\n};\n\nSliderContainer.propTypes = {\n  onConfirm: PropTypes.func\n};\n\nconst SliderOutlineWrapper = styled.div`\n  width: 300px;\n  height: 80px;\n  border: 3px solid #ffbd98;\n  background-color: #ffbd98;\n  border-radius: 43px;\n  margin-bottom: 5vh;\n`;\n\nexport default SliderContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {keyframes} from 'styled-components';\nimport Close from 'react-feather/dist/icons/x';\n\nimport Slider from './SliderContainer';\n\nconst ConfirmationPopover = ({ drink, onConfirm, onHide }) => {\n  return (\n    <ModalWrapper>\n\n      <TitleBarWrapper>\n        <CloseButtonWrapper onClick={onHide}>\n          <Close size={28}/>\n        </CloseButtonWrapper>\n      </TitleBarWrapper>\n\n      <ModalTextWrapper>\n        Tilataanko <strong>{drink.name}</strong>?\n      </ModalTextWrapper>\n\n\n      <Slider onConfirm={onConfirm}/>\n    </ModalWrapper>\n  )\n};\n\nConfirmationPopover.propTypes = {\n  drink: PropTypes.object,\n  onConfirm: PropTypes.func,\n  onHide: PropTypes.func\n};\n\nconst slideIn = keyframes`\n  from {left: -100vh; opacity: 0.5}\n  to {left: 0; opacity: 1}\n`;\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  z-index: 999;\n  background-color: white;\n  width: 100vw;\n  height: calc(100vh - 55px);\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  \n  animation: ${slideIn} 400ms 0s both;\n`;\n\nconst TitleBarWrapper = styled.div`\n  font-size: 1.5em;\n  padding: 6px;\n  width: 90vw;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst CloseButtonWrapper = styled.span`\n  font-size: 1.5em;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ModalTextWrapper = styled.span`\n  font-size: 1.5em;\n  text-align: center;\n`;\n\n\nexport default ConfirmationPopover;\n","import React, { useReducer, useEffect } from 'react';\nimport styled, { injectGlobal } from 'styled-components';\n\nimport { initialState, reducer } from './Store';\nimport Drink from './components/Drink';\nimport ConfirmationPopover from './components/ConfirmationPopover';\n\nconst callApi = async () => {\n  const response = await fetch('/api/drinks');\n  const body = await response.json();\n\n  if (response.status !== 200) throw Error(body.message);\n\n  return body;\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { drinks, selected } = state;\n\n  const dialog = selected && (\n      <ConfirmationPopover\n        drink={selected}\n        onConfirm={() => dispatch({ type: 'order-drink', drink: selected })}\n        onHide={() => dispatch({ type: 'close-dialog' })}\n      />\n    );\n\n  // load drinks from api\n  useEffect(() => {\n    callApi()\n      .then(({ drinks }) => dispatch({ type: 'api-response', drinks }))\n      .catch(err => console.error(err))\n    }, []);\n\n  return (\n    <AppWrapper>\n      <HeaderWrapper>Digit 20v</HeaderWrapper>\n      <DrinksWrapper>\n        {\n          drinks.length > 0\n            ? drinks.map(drink => (\n              <Drink\n                key={drink.name}\n                drink={drink}\n                onClick={() => dispatch({ type: 'select', drink })}\n              />\n            ))\n            : <p>Ladataan juomia...</p>\n        }\n      </DrinksWrapper>\n      {dialog}\n    </AppWrapper>\n  );\n};\n\ninjectGlobal`\n  body {\n    background-color: salmon;\n    font-family: 'Open Sans', sans-serif;\n  }\n`;\n\nconst HeaderWrapper = styled.div`\n  padding: 10px;\n  font-size: 5em;\n  font-family: 'Lobster', serif;\n  text-align: center;\n`;\n\nconst DrinksWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst AppWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}